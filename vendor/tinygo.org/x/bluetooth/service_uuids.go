// Code generated by bin/gen-service-uuids; DO NOT EDIT.
// This file was generated on 2024-12-02 16:31:40.481182635 +0100 CET m=+0.000711066 using the list of standard service UUIDs from
// https://github.com/NordicSemiconductor/bluetooth-numbers-database/blob/master/v1/service_uuids.json
package bluetooth

var (

	// ServiceUUIDCyclingPower - Cycling Power
	ServiceUUIDCyclingPower = New16BitUUID(0x1818)

	// ServiceUUIDHearingAccess - Hearing Access
	ServiceUUIDHearingAccess = New16BitUUID(0x1854)

	// ServiceUUIDAdafruitSound - Adafruit Sound Service
	ServiceUUIDAdafruitSound = NewUUID([16]byte{0xad, 0xaf, 0x0b, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDBloodPressure - Blood Pressure
	ServiceUUIDBloodPressure = New16BitUUID(0x1810)

	// ServiceUUIDRunningSpeedAndCadence - Running Speed and Cadence
	ServiceUUIDRunningSpeedAndCadence = New16BitUUID(0x1814)

	// ServiceUUIDMicrobitAccelerometer - micro:bit Accelerometer Service
	ServiceUUIDMicrobitAccelerometer = NewUUID([16]byte{0xe9, 0x5d, 0x07, 0x53, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDMeshProxySolicitation - Mesh Proxy Solicitation
	ServiceUUIDMeshProxySolicitation = New16BitUUID(0x1859)

	// ServiceUUIDNordicSensorHub - Nordic Sensor Hub Service
	ServiceUUIDNordicSensorHub = NewUUID([16]byte{0xa5, 0xb4, 0x63, 0x52, 0x9d, 0x13, 0x47, 0x9f, 0x9f, 0xcb, 0x3d, 0xcd, 0xf0, 0xa1, 0x3f, 0x4d})

	// ServiceUUIDBattery - Battery Service
	ServiceUUIDBattery = New16BitUUID(0x180F)

	// ServiceUUIDWeightScale - Weight Scale
	ServiceUUIDWeightScale = New16BitUUID(0x181D)

	// ServiceUUIDTelephonyAndMediaAudio - Telephony and Media Audio
	ServiceUUIDTelephonyAndMediaAudio = New16BitUUID(0x1855)

	// ServiceUUIDTexasInstrumentsOvertheAirDownloadOAD - Texas Instruments Over-the-Air Download (OAD) Service
	ServiceUUIDTexasInstrumentsOvertheAirDownloadOAD = NewUUID([16]byte{0xf0, 0x00, 0xff, 0xc0, 0x04, 0x51, 0x40, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00})

	// ServiceUUIDLinkLoss - Link Loss
	ServiceUUIDLinkLoss = New16BitUUID(0x1803)

	// ServiceUUIDMicrophoneControl - Microphone Control
	ServiceUUIDMicrophoneControl = New16BitUUID(0x184D)

	// ServiceUUIDFileTransferByAdafruit - File Transfer Service by Adafruit
	ServiceUUIDFileTransferByAdafruit = New16BitUUID(0xFEBB)

	// ServiceUUIDAlertNotification - Alert Notification Service
	ServiceUUIDAlertNotification = New16BitUUID(0x1811)

	// ServiceUUIDPulseOximeter - Pulse Oximeter Service
	ServiceUUIDPulseOximeter = New16BitUUID(0x1822)

	// ServiceUUIDVolumeControl - Volume Control
	ServiceUUIDVolumeControl = New16BitUUID(0x1844)

	// ServiceUUIDBroadcastAudioScan - Broadcast Audio Scan
	ServiceUUIDBroadcastAudioScan = New16BitUUID(0x184F)

	// ServiceUUIDAdafruitTone - Adafruit Tone Service
	ServiceUUIDAdafruitTone = NewUUID([16]byte{0xad, 0xaf, 0x0c, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDBinarySensor - Binary Sensor
	ServiceUUIDBinarySensor = New16BitUUID(0x183B)

	// ServiceUUIDNordicStatusMessage - Nordic Status Message Service
	ServiceUUIDNordicStatusMessage = NewUUID([16]byte{0x57, 0xa7, 0x00, 0x00, 0x93, 0x50, 0x11, 0xed, 0xa1, 0xeb, 0x02, 0x42, 0xac, 0x12, 0x00, 0x02})

	// ServiceUUIDEdgeImpulseRemoteManagement - Edge Impulse Remote Management Service
	ServiceUUIDEdgeImpulseRemoteManagement = NewUUID([16]byte{0xe2, 0xa0, 0x00, 0x01, 0xec, 0x31, 0x4e, 0xc3, 0xa9, 0x7a, 0x1c, 0x34, 0xd8, 0x7e, 0x98, 0x78})

	// ServiceUUIDAdafruitGyroscope - Adafruit Gyroscope Service
	ServiceUUIDAdafruitGyroscope = NewUUID([16]byte{0xad, 0xaf, 0x04, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDHumanInterfaceDevice - Human Interface Device
	ServiceUUIDHumanInterfaceDevice = New16BitUUID(0x1812)

	// ServiceUUIDMediaControl - Media Control
	ServiceUUIDMediaControl = New16BitUUID(0x1848)

	// ServiceUUIDTelephoneBearer - Telephone Bearer
	ServiceUUIDTelephoneBearer = New16BitUUID(0x184B)

	// ServiceUUIDNordicWiFiProvisioning - Nordic Wi-Fi Provisioning Service
	ServiceUUIDNordicWiFiProvisioning = NewUUID([16]byte{0x14, 0x38, 0x78, 0x00, 0x13, 0x0c, 0x49, 0xe7, 0xb8, 0x77, 0x28, 0x81, 0xc8, 0x9c, 0xb2, 0x58})

	// ServiceUUIDAdafruitQuaternion - Adafruit Quaternion Service
	ServiceUUIDAdafruitQuaternion = NewUUID([16]byte{0xad, 0xaf, 0x0d, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDBodyComposition - Body Composition
	ServiceUUIDBodyComposition = New16BitUUID(0x181B)

	// ServiceUUIDThingyConfiguration - Thingy Configuration Service
	ServiceUUIDThingyConfiguration = NewUUID([16]byte{0xef, 0x68, 0x01, 0x00, 0x9b, 0x35, 0x49, 0x33, 0x9b, 0x10, 0x52, 0xff, 0xa9, 0x74, 0x00, 0x42})

	// ServiceUUIDAdafruitAccelerometer - Adafruit Accelerometer Service
	ServiceUUIDAdafruitAccelerometer = NewUUID([16]byte{0xad, 0xaf, 0x02, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDAdafruitBarometric - Adafruit Barometric Service
	ServiceUUIDAdafruitBarometric = NewUUID([16]byte{0xad, 0xaf, 0x08, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDAdafruitAddressable - Adafruit Addressable Service
	ServiceUUIDAdafruitAddressable = NewUUID([16]byte{0xad, 0xaf, 0x09, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDScanParameters - Scan Parameters
	ServiceUUIDScanParameters = New16BitUUID(0x1813)

	// ServiceUUIDBondManagement - Bond Management Service
	ServiceUUIDBondManagement = New16BitUUID(0x181E)

	// ServiceUUIDTransportDiscovery - Transport Discovery
	ServiceUUIDTransportDiscovery = New16BitUUID(0x1824)

	// ServiceUUIDMicrobitMagnetometer - micro:bit Magnetometer Service
	ServiceUUIDMicrobitMagnetometer = NewUUID([16]byte{0xe9, 0x5d, 0xf2, 0xd8, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDMicrobitTemperature - micro:bit Temperature Service
	ServiceUUIDMicrobitTemperature = NewUUID([16]byte{0xe9, 0x5d, 0x61, 0x00, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDFastPair - Fast Pair Service
	ServiceUUIDFastPair = New16BitUUID(0xFE2C)

	// ServiceUUIDAdafruitLight - Adafruit Light Service
	ServiceUUIDAdafruitLight = NewUUID([16]byte{0xad, 0xaf, 0x03, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDPhysicalActivityMonitor - Physical Activity Monitor
	ServiceUUIDPhysicalActivityMonitor = New16BitUUID(0x183E)

	// ServiceUUIDAudioInputControl - Audio Input Control
	ServiceUUIDAudioInputControl = New16BitUUID(0x1843)

	// ServiceUUIDAudioStreamControl - Audio Stream Control
	ServiceUUIDAudioStreamControl = New16BitUUID(0x184E)

	// ServiceUUIDSignifyNetherlandsBVFormerlyPhilipsLighting - Signify Netherlands B.V. (formerly Philips Lighting) Service
	ServiceUUIDSignifyNetherlandsBVFormerlyPhilipsLighting = New16BitUUID(0xFE0F)

	// ServiceUUIDNordicUART - Nordic UART Service
	ServiceUUIDNordicUART = NewUUID([16]byte{0x6e, 0x40, 0x00, 0x01, 0xb5, 0xa3, 0xf3, 0x93, 0xe0, 0xa9, 0xe5, 0x0e, 0x24, 0xdc, 0xca, 0x9e})

	// ServiceUUIDSMP - SMP Service
	ServiceUUIDSMP = NewUUID([16]byte{0x8d, 0x53, 0xdc, 0x1d, 0x1d, 0xb7, 0x4c, 0xd3, 0x86, 0x8b, 0x8a, 0x52, 0x74, 0x60, 0xaa, 0x84})

	// ServiceUUIDGlucose - Glucose
	ServiceUUIDGlucose = New16BitUUID(0x1808)

	// ServiceUUIDConstantToneExtension - Constant Tone Extension
	ServiceUUIDConstantToneExtension = New16BitUUID(0x184A)

	// ServiceUUIDGenericTelephoneBearer - Generic Telephone Bearer
	ServiceUUIDGenericTelephoneBearer = New16BitUUID(0x184C)

	// ServiceUUIDPublicBroadcastAnnouncement - Public Broadcast Announcement
	ServiceUUIDPublicBroadcastAnnouncement = New16BitUUID(0x1856)

	// ServiceUUIDThingyMotion - Thingy Motion Service
	ServiceUUIDThingyMotion = NewUUID([16]byte{0xef, 0x68, 0x04, 0x00, 0x9b, 0x35, 0x49, 0x33, 0x9b, 0x10, 0x52, 0xff, 0xa9, 0x74, 0x00, 0x42})

	// ServiceUUIDAppleReserved1 - Apple Reserved Service 1
	ServiceUUIDAppleReserved1 = NewUUID([16]byte{0x7d, 0xfc, 0x60, 0x00, 0x7d, 0x1c, 0x49, 0x51, 0x86, 0xaa, 0x8d, 0x97, 0x28, 0xf8, 0xd6, 0x6c})

	// ServiceUUIDAppleReserved2 - Apple Reserved Service 2
	ServiceUUIDAppleReserved2 = NewUUID([16]byte{0x7d, 0xfc, 0x70, 0x00, 0x7d, 0x1c, 0x49, 0x51, 0x86, 0xaa, 0x8d, 0x97, 0x28, 0xf8, 0xd6, 0x6c})

	// ServiceUUIDAppleReserved3 - Apple Reserved Service 3
	ServiceUUIDAppleReserved3 = NewUUID([16]byte{0x7d, 0xfc, 0x80, 0x00, 0x7d, 0x1c, 0x49, 0x51, 0x86, 0xaa, 0x8d, 0x97, 0x28, 0xf8, 0xd6, 0x6c})

	// ServiceUUIDAppleReserved4 - Apple Reserved Service 4
	ServiceUUIDAppleReserved4 = NewUUID([16]byte{0x7d, 0xfc, 0x90, 0x00, 0x7d, 0x1c, 0x49, 0x51, 0x86, 0xaa, 0x8d, 0x97, 0x28, 0xf8, 0xd6, 0x6c})

	// ServiceUUIDThingyUI - Thingy UI Service
	ServiceUUIDThingyUI = NewUUID([16]byte{0xef, 0x68, 0x03, 0x00, 0x9b, 0x35, 0x49, 0x33, 0x9b, 0x10, 0x52, 0xff, 0xa9, 0x74, 0x00, 0x42})

	// ServiceUUIDLEGOWirelessProtocolV3Hub - LEGOÂ® Wireless Protocol v3 Hub Service
	ServiceUUIDLEGOWirelessProtocolV3Hub = NewUUID([16]byte{0x00, 0x00, 0x16, 0x23, 0x12, 0x12, 0xef, 0xde, 0x16, 0x23, 0x78, 0x5f, 0xea, 0xbc, 0xd1, 0x23})

	// ServiceUUIDThingyWeatherStation - Thingy Weather Station Service
	ServiceUUIDThingyWeatherStation = NewUUID([16]byte{0xef, 0x68, 0x02, 0x00, 0x9b, 0x35, 0x49, 0x33, 0x9b, 0x10, 0x52, 0xff, 0xa9, 0x74, 0x00, 0x42})

	// ServiceUUIDEddystoneConfiguration - Eddystone Configuration Service
	ServiceUUIDEddystoneConfiguration = NewUUID([16]byte{0xa3, 0xc8, 0x75, 0x00, 0x8e, 0xd3, 0x4b, 0xdf, 0x8a, 0x39, 0xa0, 0x1b, 0xeb, 0xed, 0xe2, 0x95})

	// ServiceUUIDDeviceInformation - Device Information
	ServiceUUIDDeviceInformation = New16BitUUID(0x180A)

	// ServiceUUIDEnvironmentalSensing - Environmental Sensing
	ServiceUUIDEnvironmentalSensing = New16BitUUID(0x181A)

	// ServiceUUIDInternetProtocolSupport - Internet Protocol Support Service
	ServiceUUIDInternetProtocolSupport = New16BitUUID(0x1820)

	// ServiceUUIDBroadcastAudioAnnouncement - Broadcast Audio Announcement
	ServiceUUIDBroadcastAudioAnnouncement = New16BitUUID(0x1852)

	// ServiceUUIDMicrobitButton - micro:bit Button Service
	ServiceUUIDMicrobitButton = NewUUID([16]byte{0xe9, 0x5d, 0x98, 0x82, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDHeartRate - Heart Rate
	ServiceUUIDHeartRate = New16BitUUID(0x180D)

	// ServiceUUIDNextDSTChange - Next DST Change Service
	ServiceUUIDNextDSTChange = New16BitUUID(0x1807)

	// ServiceUUIDUserData - User Data
	ServiceUUIDUserData = New16BitUUID(0x181C)

	// ServiceUUIDDeviceTime - Device Time
	ServiceUUIDDeviceTime = New16BitUUID(0x1847)

	// ServiceUUIDEddystone - Eddystone
	ServiceUUIDEddystone = New16BitUUID(0xFEAA)

	// ServiceUUIDFitnessMachine - Fitness Machine
	ServiceUUIDFitnessMachine = New16BitUUID(0x1826)

	// ServiceUUIDBleconAdvertising - Blecon Advertising Service
	ServiceUUIDBleconAdvertising = New16BitUUID(0xFD0D)

	// ServiceUUIDAppleNotificationCenter - Apple Notification Center Service
	ServiceUUIDAppleNotificationCenter = NewUUID([16]byte{0x79, 0x05, 0xf4, 0x31, 0xb5, 0xce, 0x4e, 0x99, 0xa4, 0x0f, 0x4b, 0x1e, 0x12, 0x2d, 0x00, 0xd0})

	// ServiceUUIDExposureNotification - Exposure Notification Service
	ServiceUUIDExposureNotification = New16BitUUID(0xFD6F)

	// ServiceUUIDContinuousGlucoseMonitoring - Continuous Glucose Monitoring
	ServiceUUIDContinuousGlucoseMonitoring = New16BitUUID(0x181F)

	// ServiceUUIDGenericAttribute - Generic Attribute
	ServiceUUIDGenericAttribute = New16BitUUID(0x1801)

	// ServiceUUIDPhilipsHueLightControl - Philips Hue Light Control Service
	ServiceUUIDPhilipsHueLightControl = NewUUID([16]byte{0x93, 0x2c, 0x32, 0xbd, 0x00, 0x00, 0x47, 0xa2, 0x83, 0x5a, 0xa8, 0xd4, 0x55, 0xb8, 0x59, 0xdd})

	// ServiceUUIDImmediateAlert - Immediate Alert
	ServiceUUIDImmediateAlert = New16BitUUID(0x1802)

	// ServiceUUIDPublishedAudioCapabilities - Published Audio Capabilities
	ServiceUUIDPublishedAudioCapabilities = New16BitUUID(0x1850)

	// ServiceUUIDAppleMedia - Apple Media Service
	ServiceUUIDAppleMedia = NewUUID([16]byte{0x89, 0xd3, 0x50, 0x2b, 0x0f, 0x36, 0x43, 0x3a, 0x8e, 0xf4, 0xc5, 0x02, 0xad, 0x55, 0xf8, 0xdc})

	// ServiceUUIDLocationAndNavigation - Location and Navigation
	ServiceUUIDLocationAndNavigation = New16BitUUID(0x1819)

	// ServiceUUIDEmergencyConfiguration - Emergency Configuration
	ServiceUUIDEmergencyConfiguration = New16BitUUID(0x183C)

	// ServiceUUIDLEGOWirelessProtocolV3Bootloader - LEGOÂ® Wireless Protocol v3 Bootloader Service
	ServiceUUIDLEGOWirelessProtocolV3Bootloader = NewUUID([16]byte{0x00, 0x00, 0x16, 0x25, 0x12, 0x12, 0xef, 0xde, 0x16, 0x23, 0x78, 0x5f, 0xea, 0xbc, 0xd1, 0x23})

	// ServiceUUIDAdafruitColor - Adafruit Color Service
	ServiceUUIDAdafruitColor = NewUUID([16]byte{0xad, 0xaf, 0x0a, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDHeliumHotspotCustom - Helium Hotspot Custom Service
	ServiceUUIDHeliumHotspotCustom = NewUUID([16]byte{0x0f, 0xda, 0x92, 0xb2, 0x44, 0xa2, 0x4a, 0xf2, 0x84, 0xf5, 0xfa, 0x68, 0x2b, 0xaa, 0x2b, 0x8d})

	// ServiceUUIDMeshProxy - Mesh Proxy Service
	ServiceUUIDMeshProxy = New16BitUUID(0x1828)

	// ServiceUUIDGamingAudio - Gaming Audio
	ServiceUUIDGamingAudio = New16BitUUID(0x1858)

	// ServiceUUIDAdafruitHumidity - Adafruit Humidity Service
	ServiceUUIDAdafruitHumidity = NewUUID([16]byte{0xad, 0xaf, 0x07, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDAdafruitProximity - Adafruit Proximity Service
	ServiceUUIDAdafruitProximity = NewUUID([16]byte{0xad, 0xaf, 0x0e, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDInsulinDelivery - Insulin Delivery
	ServiceUUIDInsulinDelivery = New16BitUUID(0x183A)

	// ServiceUUIDObjectTransfer - Object Transfer Service
	ServiceUUIDObjectTransfer = New16BitUUID(0x1825)

	// ServiceUUIDCommonAudio - Common Audio
	ServiceUUIDCommonAudio = New16BitUUID(0x1853)

	// ServiceUUIDElectronicShelfLabel - Electronic Shelf Label
	ServiceUUIDElectronicShelfLabel = New16BitUUID(0x1857)

	// ServiceUUIDPhilipsHueLightUpdate - Philips Hue Light Update Service
	ServiceUUIDPhilipsHueLightUpdate = NewUUID([16]byte{0xb8, 0x84, 0x3a, 0xdd, 0x00, 0x00, 0x4a, 0xa1, 0x87, 0x94, 0xc3, 0xf4, 0x62, 0x03, 0x0b, 0xda})

	// ServiceUUIDBasicAudioAnnouncement - Basic Audio Announcement
	ServiceUUIDBasicAudioAnnouncement = New16BitUUID(0x1851)

	// ServiceUUIDMicrobitDFUControl - micro:bit DFU Control Service
	ServiceUUIDMicrobitDFUControl = NewUUID([16]byte{0xe9, 0x5d, 0x93, 0xb0, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDAdafruitButton - Adafruit Button Service
	ServiceUUIDAdafruitButton = NewUUID([16]byte{0xad, 0xaf, 0x06, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDTxPower - Tx Power
	ServiceUUIDTxPower = New16BitUUID(0x1804)

	// ServiceUUIDCoordinatedSetIdentification - Coordinated Set Identification
	ServiceUUIDCoordinatedSetIdentification = New16BitUUID(0x1846)

	// ServiceUUIDMicrobitEvent - micro:bit Event Service
	ServiceUUIDMicrobitEvent = NewUUID([16]byte{0xe9, 0x5d, 0x93, 0xaf, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDSecureDFU - Secure DFU Service
	ServiceUUIDSecureDFU = New16BitUUID(0xFE59)

	// ServiceUUIDAutomationIO - Automation IO
	ServiceUUIDAutomationIO = New16BitUUID(0x1815)

	// ServiceUUIDHTTPProxy - HTTP Proxy
	ServiceUUIDHTTPProxy = New16BitUUID(0x1823)

	// ServiceUUIDThingySound - Thingy Sound Service
	ServiceUUIDThingySound = NewUUID([16]byte{0xef, 0x68, 0x05, 0x00, 0x9b, 0x35, 0x49, 0x33, 0x9b, 0x10, 0x52, 0xff, 0xa9, 0x74, 0x00, 0x42})

	// ServiceUUIDExperimentalButtonlessDFU - Experimental Buttonless DFU Service
	ServiceUUIDExperimentalButtonlessDFU = NewUUID([16]byte{0x8e, 0x40, 0x00, 0x01, 0xf3, 0x15, 0x4f, 0x60, 0x9f, 0xb8, 0x83, 0x88, 0x30, 0xda, 0xea, 0x50})

	// ServiceUUIDAdafruitMagnetometer - Adafruit Magnetometer Service
	ServiceUUIDAdafruitMagnetometer = NewUUID([16]byte{0xad, 0xaf, 0x05, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})

	// ServiceUUIDMicrobitLED - micro:bit LED Service
	ServiceUUIDMicrobitLED = NewUUID([16]byte{0xe9, 0x5d, 0xd9, 0x1d, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDCurrentTime - Current Time Service
	ServiceUUIDCurrentTime = New16BitUUID(0x1805)

	// ServiceUUIDHealthThermometer - Health Thermometer
	ServiceUUIDHealthThermometer = New16BitUUID(0x1809)

	// ServiceUUIDIndoorPositioning - Indoor Positioning
	ServiceUUIDIndoorPositioning = New16BitUUID(0x1821)

	// ServiceUUIDPhoneAlertStatus - Phone Alert Status Service
	ServiceUUIDPhoneAlertStatus = New16BitUUID(0x180E)

	// ServiceUUIDVolumeOffsetControl - Volume Offset Control
	ServiceUUIDVolumeOffsetControl = New16BitUUID(0x1845)

	// ServiceUUIDMicrobitIOPin - micro:bit IO Pin Service
	ServiceUUIDMicrobitIOPin = NewUUID([16]byte{0xe9, 0x5d, 0x12, 0x7b, 0x25, 0x1d, 0x47, 0x0a, 0xa0, 0x62, 0xfa, 0x19, 0x22, 0xdf, 0xa9, 0xa8})

	// ServiceUUIDNordicLEDAndButton - Nordic LED and Button Service
	ServiceUUIDNordicLEDAndButton = NewUUID([16]byte{0x00, 0x00, 0x15, 0x23, 0x12, 0x12, 0xef, 0xde, 0x15, 0x23, 0x78, 0x5f, 0xea, 0xbc, 0xd1, 0x23})

	// ServiceUUIDGenericAccess - Generic Access
	ServiceUUIDGenericAccess = New16BitUUID(0x1800)

	// ServiceUUIDCyclingSpeedAndCadence - Cycling Speed and Cadence
	ServiceUUIDCyclingSpeedAndCadence = New16BitUUID(0x1816)

	// ServiceUUIDMeshProvisioning - Mesh Provisioning Service
	ServiceUUIDMeshProvisioning = New16BitUUID(0x1827)

	// ServiceUUIDGenericMediaControl - Generic Media Control
	ServiceUUIDGenericMediaControl = New16BitUUID(0x1849)

	// ServiceUUIDMemfaultDiagnostic - Memfault Diagnostic Service
	ServiceUUIDMemfaultDiagnostic = NewUUID([16]byte{0x54, 0x22, 0x00, 0x00, 0xf6, 0xa5, 0x40, 0x07, 0xa3, 0x71, 0x72, 0x2f, 0x4e, 0xbd, 0x84, 0x36})

	// ServiceUUIDReconnectionConfiguration - Reconnection Configuration
	ServiceUUIDReconnectionConfiguration = New16BitUUID(0x1829)

	// ServiceUUIDReferenceTimeUpdate - Reference Time Update Service
	ServiceUUIDReferenceTimeUpdate = New16BitUUID(0x1806)

	// ServiceUUIDLegacyDFU - Legacy DFU Service
	ServiceUUIDLegacyDFU = NewUUID([16]byte{0x00, 0x00, 0x15, 0x30, 0x12, 0x12, 0xef, 0xde, 0x15, 0x23, 0x78, 0x5f, 0xea, 0xbc, 0xd1, 0x23})

	// ServiceUUIDAdafruitTemperature - Adafruit Temperature Service
	ServiceUUIDAdafruitTemperature = NewUUID([16]byte{0xad, 0xaf, 0x01, 0x00, 0xc3, 0x32, 0x42, 0xa8, 0x93, 0xbd, 0x25, 0xe9, 0x05, 0x75, 0x6c, 0xb8})
)
